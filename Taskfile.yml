version: '3'
tasks:
  build:
    cmds:
      - docker build --tag github_runner:org --target build-org .
      - docker build --tag github_runner:org-nodejs-14 --target build-org-nodejs-14 .
  
  tag-and-push:
    cmds:
      - docker tag github_runner:{{.TAG}} darkwind8/github_runner:{{.TAG}}-latest
      - docker tag github_runner:{{.TAG}} darkwind8/github_runner:{{.TAG}}-{{.VERSION}}
      - docker push darkwind8/github_runner:{{.TAG}}-latest
      - docker push darkwind8/github_runner:{{.TAG}}-{{.VERSION}}

  deploy:
    cmds:
      - task: build
      - { task: tag-and-push, vars: {TAG: "org", VERSION: "{{.VERSION}}"} }
      - { task: tag-and-push, vars: {TAG: "org-nodejs-14", VERSION: "{{.VERSION}}"} }
    env:
      VERSION: undefined
    preconditions:
      - sh: "[ $VERSION != undefined ]"


  org:launch:
    cmds:
      - defer: runuser -l user -c 'cd /app && ./config.sh remove --token {{.TOKEN}}'
      - sleep 2 && echo 'receveing token'
      - runuser -l user -c 'cd /app && ./config.sh --labels upptime --url {{.ORG_URL}} --token {{.TOKEN}} --unattended --disableupdate'
      - dockerd & runuser -l user -c 'cd /app && ./run.sh'
    env:
      ORG_URL: undefined
      ORG_TOKEN: undefined
      ORG_NAME: undefined
    vars:
      TOKEN:
        sh: >-
          curl
          -X POST
          -H "Accept: application/vnd.github+json"
          -H "Authorization: Bearer {{.ORG_TOKEN}}"
          -H "X-GitHub-Api-Version: 2022-11-28"
          https://api.github.com/orgs/{{.ORG_NAME}}/actions/runners/registration-token | jq -r '.token'